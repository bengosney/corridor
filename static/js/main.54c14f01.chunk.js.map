{"version":3,"sources":["Board.module.scss","Player.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Player","id","x","y","walls","objectives","this","_x","_y","console","log","Board","props","players","board","b","Array","i","length","j","jmod","imod","emptyBoard","starts","1","Math","floor","2","3","4","wins","playerObjects","push","state","curPlayer","winner","wallHover","player","getPlayer","_player","moves","canMove","tryMove","tryWall","map","includes","hasWon","setState","getMovesFlatArray","move","useWall","selectedWalls","getSelectedWalls","w","selected","n","add","e","playerMap","index","getClass","v","classes","styles","square","narrow","short","validmove","indexOf","playerNumber","active","nothing","emptyWall","horz","vert","hover","wall","empty","join","setEnter","row","col","setLeave","getContent","Fragment","className","w1","onPointerEnter","onPointerLeave","w2","getEmptyWall","getCol","colIndex","key","rowIndex","onClick","tryTurn","getElement","won","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54c14f01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__21Pbv\",\"square\":\"Board_square__2Sj8T\",\"narrow\":\"Board_narrow__NUhNX\",\"short\":\"Board_short__251F-\",\"nothing\":\"Board_nothing__CdNa2\",\"emptyWall\":\"Board_emptyWall__2QPIv\",\"hover\":\"Board_hover__1WgqN\",\"horz\":\"Board_horz__15q0T\",\"w1\":\"Board_w1__3IXna\",\"w2\":\"Board_w2__3_0Ki\",\"vert\":\"Board_vert__1gOiq\",\"wall\":\"Board_wall__XyZwn\",\"empty\":\"Board_empty__WlA6a\",\"validmove\":\"Board_validmove__3pm2u\",\"pulse-move\":\"Board_pulse-move__hgdNu\",\"player1\":\"Board_player1__8QlVJ\",\"active\":\"Board_active__3p7qy\",\"pulse1\":\"Board_pulse1__2MrNP\",\"player2\":\"Board_player2__3X4fq\",\"pulse2\":\"Board_pulse2__ea3-k\",\"player3\":\"Board_player3__4-dk-\",\"pulse3\":\"Board_pulse3__Q3eq_\",\"player4\":\"Board_player4__L86FT\",\"pulse4\":\"Board_pulse4__3DHkG\"};","class Player  {\n    constructor(id, x, y, walls, objectives) {\n\tthis.x = x;\n\tthis.y = y;\n\tthis.id = id;\n\tthis.walls = walls;\n\tthis.objectives = objectives;\n    }\n\n    move(x, y) {\n\tthis.x = x;\n\tthis.y = y;\n    }\n\n    getPos() {\n\treturn {x: this.x, y: this.y};\n    }\n\n    hasWon() {\n\tconst _x = this.objectives.x !== null ? this.objectives.x : this.x;\n\tconst _y = this.objectives.y !== null ? this.objectives.y : this.y;\n\n\tif (_x === this.x && _y === this.y) {\n\t    return true;\n\t}\n\n\tconsole.log(this.id, this.x, this.y, this.objectives);\n\n\treturn false;\n    }\n\n    useWall() {\n\tif (this.walls > 0) {\n\t    this.walls--;\n\t    return true;\n\t}\n\n\treturn false;\n    }\n}\n\nexport default Player;\n","import React, { Component } from 'react';\n//import PropTypes from 'prop-types';\nimport Player from './Player';\nimport styles from './Board.module.scss';\n\nclass Board extends Component {\n    constructor(props) {\n\tsuper(props);\n\n\tconst {x = 9, y = 9} = props;\n\tconst { players = 4 } = props;\n\tconst { walls = 5 } = props;\n\n        const emptyBoard = (x, y) => {\n            const _x = (x * 2) - 1;\n            const _y = (y * 2) - 1;\n            \n\t    const b = new Array(_x);\n\t    for (let i = 0; i < b.length; i++) {\n\t\tb[i] = new Array(_y);\n\t\tfor (let j = 0; j < b[i].length; j++) {\n                    const jmod = j % 2;\n                    const imod = i % 2;\n                    \n\t\t    b[i][j] = imod ? (jmod ? 'e' : 'w') : (jmod ? 'w' : 0);\n\t\t}\n\t    }\n            \n\t    return b;\n\t};\n\n        const board = emptyBoard(x, y);\n\n\tconst starts = {\n            1: {x:Math.floor(board.length / 2), y:0},\n\t    2: {x:board.length - 1 , y:Math.floor(board[0].length / 2)},\n\t    3: {x:Math.floor(board.length / 2) , y:board[0].length - 1},\n\t    4: {x:0 , y:Math.floor(board[0].length / 2)},\n\t};\n\t\n\tconst wins = {\n\t    1: {x: null, y: board[0].length - 1},\n\t    2: {x: 0, y: null},\n\t    3: {x: null, y: 0},\n\t    4: {x: board.length - 1, y: null},\n\t};\n\n\tconst playerObjects = [];\n\tfor (let i = 1; i <= players ; i++) {\n\t    playerObjects.push(new Player(i, starts[i].x, starts[i].y, walls, wins[i]));\n\t}\n        \n\tthis.state = {\n\t    board: board,\n            curPlayer: 1,\n\t    players: playerObjects,\n\t    winner: null,\n            walls: [],\n            wallHover: null,\n\t};\n    }\n\n    componentDidMount() {\n        //this.updateBoard();\n    }\n\n    getPlayer(player) {\n\tconst { players } = this.state;\n\t\n\treturn players[player - 1];\n    }\n\n    getCurrentPlayer() {\n\tconst { curPlayer } = this.state;\n\n\treturn this.getPlayer(curPlayer);\n    }\n\n    getMovesFlatArray(player) {\n\tconst _player = this.getPlayer(player);\n\tconst { x, y } = _player;\n\t\n        const { board } = this.state;\n        const moves = [];\n\n\tconst canMove = (x, y) => {\n\t    if( x < 0 || y < 0) {\n\t\treturn false;\n\t    }\n\n\t    if (x > (board.length - 1) || y > (board[x].length - 1)) {\n\t\treturn false;\n\t    }\n\n\t    return board[x][y] === 'w';\n\t};\n\t\n        if (canMove(x + 1, y)) {\n            moves.push(`${x + 2}:${y}`); \n        }\n\t\n\tif (canMove(x - 1, y)) {\n            moves.push(`${x - 2}:${y}`); \n        }\n\n\tif (canMove(x, y + 1)) {\n            moves.push(`${x}:${y + 2}`); \n        }\n\t\n\tif (canMove(x, y - 1)) {\n            moves.push(`${x}:${y - 2}`); \n        }\n\n        return moves;\n    }\n\n    tryTurn(x, y) {\n\tconst { curPlayer, players, winner } = this.state;\n\n\tif (winner !== null) {\n\t    return;\n\t}\n\t\n\tconst state = { players: players };\n\n\tif (!this.tryMove(x,y) && !this.tryWall(x,y)) {\n\t    return;\n\t}\n\n\tconst otherPositions = players.map(player => player.id !== curPlayer ? `${player.x}|${player.y}` : '');\n\n\tif (!otherPositions.includes(`${players[curPlayer - 1].x}|${players[curPlayer - 1].y}`)) {\n\t    if (curPlayer === players.length) {\n\t\tstate.curPlayer = 1;\n\t    } else {\n\t\tstate.curPlayer = curPlayer + 1;\n\t    }\n\t}\n\n\tif (players[curPlayer - 1].hasWon()) {\n\t    state.winner = players[curPlayer - 1];\n\t}\n\n\tthis.setState(state);\n    }\n\n    tryMove(x, y) {\n        const { curPlayer, players } = this.state;\n\n\tconst validMoves = this.getMovesFlatArray(curPlayer);\n\n\tif (!validMoves.includes(`${x}:${y}`)) {\n\t    return false;\n\t}\n\n\tplayers[curPlayer - 1].move(x, y);\n\n\treturn true;\n    }\n\n    tryWall(x, y) {\n\tconst { curPlayer, players, board } = this.state;\n\n\tif (board[x][y] === 'w' && players[curPlayer - 1].useWall()) {\n            const selectedWalls = this.getSelectedWalls();\n\t    selectedWalls.map(w => board[w.y][w.x] = 'W');\n\t    this.setState({ board: board });\n\n\t    return selectedWalls.length == 3;\n\t}\n\n\treturn false;\n    }\n\n    getSelectedWalls() {\n        const { wallHover, board } = this.state;\n\n        const selected = [];\n        \n        if (wallHover !== null) {\n            const { x, y, n } = wallHover;\n\n            const add = (x, y) => {\n                try {\n                    if (board[y][x] !== 'W') {\n                        selected.push({x:x , y:y});\n                    }\n                } catch(e) {\n                    \n                }\n            };\n            \n            add(x, y);\n            \n\t    if (x % 2) {\n\t\tif (n === 1) {\n                    add(x, y - 1);\n                    add(x, y - 2);\n\t\t}\n\n\t\tif (n === 2) {\n                    add(x, y + 1);\n                    add(x, y + 2);\n\t\t}\n\t    } else {\n\t\tif (n === 1) {\n                    add(x - 1, y);\n                    add(x - 2, y);\n\t\t}\n\n\t\tif (n === 2) {\n                    add(x + 1, y);\n                    add(x + 2, y);\n\t\t}\n\t    }\n        }\n\n        return selected.length === 3 ? selected : [];\n    }\n\n    render() {\n\tconst { curPlayer, winner, board } = this.state;\n\tconst playerMap = this.state.players.map((player, index) => `${player.x}:${player.y}`);\n\tconst moves = this.getMovesFlatArray(curPlayer);\n\n        const selectedWalls = this.getSelectedWalls().map(w => `${w.x}|${w.y}`);\n\t\n        const getClass = (v, x, y) => {\n            const classes = [styles.square];\n\n            if (x % 2) {\n                classes.push(styles.narrow);\n            }\n\n            if (y % 2) {\n                classes.push(styles.short);\n            }\n\n            if (moves.includes(`${y}:${x}`)) {\n                classes.push(styles.validmove); \n            }\n\n\t    if (playerMap.indexOf(`${y}:${x}`) !== -1) {\n\t\tconst playerNumber =  playerMap.indexOf(`${y}:${x}`) + 1;\n\t\tclasses.push(styles[`player${playerNumber}`]);\n\t\t\n                if (curPlayer === playerNumber) {\n                    classes.push(styles.active);\n                }\n\t    }\n            \n            switch (v) {\n            case 'e':\n                classes.push(styles.nothing);\n                break;\n            case 'w':\n                classes.push(styles.emptyWall);\n                if (x % 2) {\n                    classes.push(styles.horz);\n                } else {\n                    classes.push(styles.vert);\n                }\n\n                if (selectedWalls.length) {                    \n                    if (selectedWalls.indexOf(`${x}|${y}`) !== -1) {\n                        classes.push(styles.hover);\n                    }\n                }\n                                \n                break;\n            case 'W':\n                classes.push(styles.wall);\n                break;\n            default:\n                classes.push(styles.empty);\n                break;\n            }\n\n            return classes.join(' ');\n        };\n\n\n        // const getWallBuilderClass = (e, row, c) => [c, row % 2 ? styles.horz : styles.vert].join(' ');\n\n        const setEnter = (row, col, n) => this.setState({ wallHover: {x: row, y: col, n: n} });\n        const setLeave = (row, col, n) => {\n            const { wallHover } = this.state;\n            if (wallHover !== null && row === wallHover.x && col === wallHover.y) {\n                this.setState({ wallHover: null });\n            }\n        };\n\n        const getEmptyWall = (row, col) => {\n            return (\n                <React.Fragment>\n                  <div className={ styles.w1 } onPointerEnter={() => setEnter(row, col, 1) } onPointerLeave={ () => setLeave(row, col, 1) }>w1</div>\n                  <div className={ styles.w2 } onPointerEnter={() => setEnter(row, col, 2) } onPointerLeave={ () => setLeave(row, col, 2) }>w2</div>\n                </React.Fragment>\n            );\n        };\n\tconst getContent = (e, row, col) => e === 'w' ? getEmptyWall(row, col) : e;\n        const getElement = (e, row, col) => <div key={row} className={ getClass(e, row, col) }  onClick={ (e) => this.tryTurn(col, row) }>{ getContent(e, row, col) }</div>;\n\tconst getCol = (col, colIndex) => <div key={colIndex} className={ styles.col }>{ col.map((e, rowIndex) => getElement(e, rowIndex, colIndex)) }</div>;\n\n\tconst won = winner ? (<div>{`Player ${winner.id} is the Winner`}</div>) : null;\n        \n\treturn (\n            <div>\n\t      <div className={ styles.board }>\n                { board.map((col, index) => getCol(col, index)) }\n              </div>\n              { won }\n            </div>\n\t);\n    }\n}\n\nexport default Board;\n","import React from 'react';\nimport './App.css';\n\nimport Board from './Board.js';\n\nfunction App() {\n    return (\n\t<div className=\"App\">\n\t  <p>Game</p>\n          <Board />\n\t</div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}