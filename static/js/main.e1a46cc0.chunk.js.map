{"version":3,"sources":["Board.module.scss","Player.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Player","id","x","y","walls","objectives","this","_x","_y","Board","props","players","board","b","Array","i","length","j","jmod","imod","emptyBoard","starts","1","Math","floor","2","3","4","wins","playerObjects","push","state","curPlayer","winner","wallHover","player","getPlayer","_player","moves","canMove","tryMove","tryWall","map","includes","hasWon","setState","getMovesFlatArray","move","useWall","selectedWalls","getSelectedWalls","w","selected","n","add","e","playerMap","index","getClass","v","classes","styles","square","narrow","short","validmove","indexOf","playerNumber","active","nothing","emptyWall","horz","vert","hover","wall","empty","join","setEnter","row","col","setLeave","getContent","Fragment","className","w1","onPointerEnter","onPointerLeave","w2","getEmptyWall","getCol","colIndex","key","rowIndex","onClick","tryTurn","getElement","won","boardInner","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,0BAA0B,OAAS,sBAAsB,OAAS,sBAAsB,MAAQ,qBAAqB,QAAU,uBAAuB,UAAY,yBAAyB,MAAQ,qBAAqB,KAAO,oBAAoB,GAAK,kBAAkB,GAAK,kBAAkB,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,qBAAqB,UAAY,yBAAyB,aAAa,0BAA0B,QAAU,uBAAuB,OAAS,sBAAsB,OAAS,sBAAsB,QAAU,uBAAuB,OAAS,sBAAsB,QAAU,uBAAuB,OAAS,sBAAsB,QAAU,uBAAuB,OAAS,wB,0MCsCtvBC,E,WAtCX,WAAYC,EAAIC,EAAGC,EAAGC,EAAOC,GAAa,oBACtCC,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,EACTG,KAAKL,GAAKA,EACVK,KAAKF,MAAQA,EACbE,KAAKD,WAAaA,E,iDAGjBH,EAAGC,GACJG,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,I,+BAIT,MAAO,CAAED,EAAGI,KAAKJ,EAAGC,EAAGG,KAAKH,K,+BAI5B,IAAMI,EAA2B,OAAtBD,KAAKD,WAAWH,EAAaI,KAAKD,WAAWH,EAAII,KAAKJ,EAC3DM,EAA2B,OAAtBF,KAAKD,WAAWF,EAAaG,KAAKD,WAAWF,EAAIG,KAAKH,EAEjE,OAAII,IAAOD,KAAKJ,GAAKM,IAAOF,KAAKH,I,gCAQjC,OAAIG,KAAKF,MAAQ,IACbE,KAAKF,SACE,O,qBCoSJK,E,YA9TX,WAAYC,GAAQ,IAAD,sBACf,4CAAMA,IAyCN,IA1Ce,MAGUA,EAAjBR,SAHO,MAGH,EAHG,IAGUQ,EAAVP,SAHA,MAGI,EAHJ,IAISO,EAAhBC,eAJO,MAIG,EAJH,IAKOD,EAAdN,aALO,MAKC,EALD,EAyBTQ,EAlBa,SAACV,EAAGC,GAKnB,IAJA,IACMK,EAAS,EAAJL,EAAQ,EAEbU,EAAI,IAAIC,MAHC,EAAJZ,EAAQ,GAIVa,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IAAK,CAC/BF,EAAEE,GAAK,IAAID,MAAMN,GACjB,IAAK,IAAIS,EAAI,EAAGA,EAAIJ,EAAEE,GAAGC,OAAQC,IAAK,CAClC,IAAMC,EAAOD,EAAI,EACXE,EAAOJ,EAAI,EAEjBF,EAAEE,GAAGE,GAAKE,EAAQD,EAAO,IAAM,IAAOA,EAAO,IAAM,GAI3D,OAAOL,EAGGO,CAAWlB,EAAGC,GAEtBkB,EAAS,CACXC,EAAG,CAAEpB,EAAGqB,KAAKC,MAAMZ,EAAMI,OAAS,GAAIb,EAAG,GACzCsB,EAAG,CAAEvB,EAAGU,EAAMI,OAAS,EAAGb,EAAGoB,KAAKC,MAAMZ,EAAM,GAAGI,OAAS,IAC1DU,EAAG,CAAExB,EAAGqB,KAAKC,MAAMZ,EAAMI,OAAS,GAAIb,EAAGS,EAAM,GAAGI,OAAS,GAC3DW,EAAG,CAAEzB,EAAG,EAAGC,EAAGoB,KAAKC,MAAMZ,EAAM,GAAGI,OAAS,KAGzCY,EAAO,CACTN,EAAG,CAAEpB,EAAG,KAAMC,EAAGS,EAAM,GAAGI,OAAS,GACnCS,EAAG,CAAEvB,EAAG,EAAGC,EAAG,MACduB,EAAG,CAAExB,EAAG,KAAMC,EAAG,GACjBwB,EAAG,CAAEzB,EAAGU,EAAMI,OAAS,EAAGb,EAAG,OAG3B0B,EAAgB,GACbd,EAAI,EAAGA,GAAKJ,EAASI,IAC1Bc,EAAcC,KAAK,IAAI9B,EAAOe,EAAGM,EAAON,GAAGb,EAAGmB,EAAON,GAAGZ,EAAGC,EAAOwB,EAAKb,KA3C5D,OA8Cf,EAAKgB,MAAQ,CACTnB,MAAOA,EACPoB,UAAW,EACXrB,QAASkB,EACTI,OAAQ,KACR7B,MAAO,GACP8B,UAAW,MApDA,E,oHA4DTC,GAGN,OAFoB7B,KAAKyB,MAAjBpB,QAEOwB,EAAS,K,yCAGR,IACRH,EAAc1B,KAAKyB,MAAnBC,UAER,OAAO1B,KAAK8B,UAAUJ,K,wCAGRG,GACd,IAAME,EAAU/B,KAAK8B,UAAUD,GACvBjC,EAASmC,EAATnC,EAAGC,EAAMkC,EAANlC,EAEHS,EAAUN,KAAKyB,MAAfnB,MACF0B,EAAQ,GAERC,EAAU,SAACrC,EAAGC,GAChB,QAAID,EAAI,GAAKC,EAAI,OAIbD,EAAIU,EAAMI,OAAS,GAAKb,EAAIS,EAAMV,GAAGc,OAAS,IAI3B,MAAhBJ,EAAMV,GAAGC,KAmBpB,OAhBIoC,EAAQrC,EAAI,EAAGC,IACfmC,EAAMR,KAAN,UAAc5B,EAAI,EAAlB,YAAuBC,IAGvBoC,EAAQrC,EAAI,EAAGC,IACfmC,EAAMR,KAAN,UAAc5B,EAAI,EAAlB,YAAuBC,IAGvBoC,EAAQrC,EAAGC,EAAI,IACfmC,EAAMR,KAAN,UAAc5B,EAAd,YAAmBC,EAAI,IAGvBoC,EAAQrC,EAAGC,EAAI,IACfmC,EAAMR,KAAN,UAAc5B,EAAd,YAAmBC,EAAI,IAGpBmC,I,8BAGHpC,EAAGC,GAAI,IAAD,EAC6BG,KAAKyB,MAApCC,EADE,EACFA,UAAWrB,EADT,EACSA,QAEnB,GAAe,OAHL,EACkBsB,OAE5B,CAIA,IAAMF,EAAQ,CAAEpB,QAASA,GAEzB,GAAKL,KAAKkC,QAAQtC,EAAGC,IAAOG,KAAKmC,QAAQvC,EAAGC,GAIrBQ,EAAQ+B,KAAI,SAAAP,GAAM,OAAKA,EAAOlC,KAAO+B,EAAd,UAA6BG,EAAOjC,EAApC,YAAyCiC,EAAOhC,GAAM,MAEhFwC,SAAf,UAA2BhC,EAAQqB,EAAY,GAAG9B,EAAlD,YAAuDS,EAAQqB,EAAY,GAAG7B,MAC3E6B,IAAcrB,EAAQK,OACtBe,EAAMC,UAAY,EAElBD,EAAMC,UAAYA,EAAY,GAIlCrB,EAAQqB,EAAY,GAAGY,WACvBb,EAAME,OAAStB,EAAQqB,EAAY,IAGvC1B,KAAKuC,SAASd,M,8BAGV7B,EAAGC,GAAI,IAAD,EACqBG,KAAKyB,MAA5BC,EADE,EACFA,UAAWrB,EADT,EACSA,QAInB,QAFmBL,KAAKwC,kBAAkBd,GAE1BW,SAAX,UAAuBzC,EAAvB,YAA4BC,MAIjCQ,EAAQqB,EAAY,GAAGe,KAAK7C,EAAGC,IAExB,K,8BAGHD,EAAGC,GAAI,IAAD,EAC4BG,KAAKyB,MAAnCC,EADE,EACFA,UAAWrB,EADT,EACSA,QAASC,EADlB,EACkBA,MAE5B,GAAoB,MAAhBA,EAAMV,GAAGC,IAAcQ,EAAQqB,EAAY,GAAGgB,UAAW,CACzD,IAAMC,EAAgB3C,KAAK4C,mBAI3B,OAHAD,EAAcP,KAAI,SAAAS,GAAC,OAAKvC,EAAMuC,EAAEhD,GAAGgD,EAAEjD,GAAK,OAC1CI,KAAKuC,SAAS,CAAEjC,MAAOA,IAES,IAAzBqC,EAAcjC,OAGzB,OAAO,I,yCAGS,IAAD,EACcV,KAAKyB,MAA1BG,EADO,EACPA,UAAWtB,EADJ,EACIA,MAEbwC,EAAW,GAEjB,GAAkB,OAAdlB,EAAoB,CAAC,IACbhC,EAAYgC,EAAZhC,EAAGC,EAAS+B,EAAT/B,EAAGkD,EAAMnB,EAANmB,EAERC,EAAM,SAACpD,EAAGC,GACZ,IACwB,MAAhBS,EAAMT,GAAGD,IACTkD,EAAStB,KAAK,CAAE5B,EAAGA,EAAGC,EAAGA,IAE/B,MAAOoD,MAGbD,EAAIpD,EAAGC,GAEHD,EAAI,GACM,IAANmD,IACAC,EAAIpD,EAAGC,EAAI,GACXmD,EAAIpD,EAAGC,EAAI,IAGL,IAANkD,IACAC,EAAIpD,EAAGC,EAAI,GACXmD,EAAIpD,EAAGC,EAAI,MAGL,IAANkD,IACAC,EAAIpD,EAAI,EAAGC,GACXmD,EAAIpD,EAAI,EAAGC,IAGL,IAANkD,IACAC,EAAIpD,EAAI,EAAGC,GACXmD,EAAIpD,EAAI,EAAGC,KAKvB,OAA2B,IAApBiD,EAASpC,OAAeoC,EAAW,K,+BAGpC,IAAD,SACgC9C,KAAKyB,MAAlCC,EADH,EACGA,UAAWC,EADd,EACcA,OAAQrB,EADtB,EACsBA,MACrB4C,EAAYlD,KAAKyB,MAAMpB,QAAQ+B,KAAI,SAACP,EAAQsB,GAAT,gBAAsBtB,EAAOjC,EAA7B,YAAkCiC,EAAOhC,MAC5EmC,EAAQhC,KAAKwC,kBAAkBd,GAE/BiB,EAAgB3C,KAAK4C,mBAAmBR,KAAI,SAAAS,GAAC,gBAAOA,EAAEjD,EAAT,YAAciD,EAAEhD,MAE7DuD,EAAW,SAACC,EAAGzD,EAAGC,GACpB,IAAMyD,EAAU,CAACC,IAAOC,QAcxB,GAZI5D,EAAI,GACJ0D,EAAQ9B,KAAK+B,IAAOE,QAGpB5D,EAAI,GACJyD,EAAQ9B,KAAK+B,IAAOG,OAGpB1B,EAAMK,SAAN,UAAkBxC,EAAlB,YAAuBD,KACvB0D,EAAQ9B,KAAK+B,IAAOI,YAGgB,IAApCT,EAAUU,QAAV,UAAqB/D,EAArB,YAA0BD,IAAa,CACvC,IAAMiE,EAAeX,EAAUU,QAAV,UAAqB/D,EAArB,YAA0BD,IAAO,EACtD0D,EAAQ9B,KAAK+B,IAAO,SAAD,OAAUM,KAEzBnC,IAAcmC,GACdP,EAAQ9B,KAAK+B,IAAOO,QAI5B,OAAQT,GACJ,IAAK,IACDC,EAAQ9B,KAAK+B,IAAOQ,SACpB,MACJ,IAAK,IACDT,EAAQ9B,KAAK+B,IAAOS,WAChBpE,EAAI,EACJ0D,EAAQ9B,KAAK+B,IAAOU,MAEpBX,EAAQ9B,KAAK+B,IAAOW,MAGpBvB,EAAcjC,SAC8B,IAAxCiC,EAAciB,QAAd,UAAyBhE,EAAzB,YAA8BC,KAC9ByD,EAAQ9B,KAAK+B,IAAOY,OAI5B,MACJ,IAAK,IACDb,EAAQ9B,KAAK+B,IAAOa,MACpB,MACJ,QACId,EAAQ9B,KAAK+B,IAAOc,OAI5B,OAAOf,EAAQgB,KAAK,MAKlBC,EAAW,SAACC,EAAKC,EAAK1B,GAAX,OAAiB,EAAKR,SAAS,CAAEX,UAAW,CAAEhC,EAAG4E,EAAK3E,EAAG4E,EAAK1B,EAAGA,MAC5E2B,EAAW,SAACF,EAAKC,EAAK1B,GAAO,IACvBnB,EAAc,EAAKH,MAAnBG,UACU,OAAdA,GAAsB4C,IAAQ5C,EAAUhC,GAAK6E,IAAQ7C,EAAU/B,GAC/D,EAAK0C,SAAS,CAAEX,UAAW,QAgB7B+C,EAAa,SAAC1B,EAAGuB,EAAKC,GAAT,MAAwB,MAANxB,EAZhB,SAACuB,EAAKC,GACvB,OACI,kBAAC,IAAMG,SAAP,KACI,yBAAKC,UAAWtB,IAAOuB,GAAIC,eAAgB,kBAAMR,EAASC,EAAKC,EAAK,IAAIO,eAAgB,kBAAMN,EAASF,EAAKC,KAA5G,MAGA,yBAAKI,UAAWtB,IAAO0B,GAAIF,eAAgB,kBAAMR,EAASC,EAAKC,EAAK,IAAIO,eAAgB,kBAAMN,EAASF,EAAKC,KAA5G,OAMqCS,CAAaV,EAAKC,GAAOxB,GAMpEkC,EAAS,SAACV,EAAKW,GAAN,OACX,yBAAKC,IAAKD,EAAUP,UAAWtB,IAAOkB,KACjCA,EAAIrC,KAAI,SAACa,EAAGqC,GAAJ,OAPE,SAACrC,EAAGuB,EAAKC,GAAT,OACf,yBAAKY,IAAKb,EAAKK,UAAWzB,EAASH,EAAGuB,EAAKC,GAAMc,QAAS,SAAAtC,GAAC,OAAI,EAAKuC,QAAQf,EAAKD,KAC5EG,EAAW1B,EAAGuB,EAAKC,IAKMgB,CAAWxC,EAAGqC,EAAUF,QAIpDM,EAAM/D,EAAS,8CAAgBA,EAAOhC,GAAvB,mBAAmD,KAExE,OACI,yBAAKkF,UAAYtB,IAAOoC,YACpB,yBAAKd,UAAWtB,IAAOjD,OAAQA,EAAM8B,KAAI,SAACqC,EAAKtB,GAAN,OAAgBgC,EAAOV,EAAKtB,OACpEuC,O,GAzTGE,aCSLC,MATf,WACI,OACI,yBAAKhB,UAAU,OACX,mCACA,kBAAC,EAAD,QCGQiB,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCXvCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgHzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAC/BA,EAAaC,kB","file":"static/js/main.e1a46cc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__21Pbv\",\"boardInner\":\"Board_boardInner__2q36H\",\"square\":\"Board_square__2Sj8T\",\"narrow\":\"Board_narrow__NUhNX\",\"short\":\"Board_short__251F-\",\"nothing\":\"Board_nothing__CdNa2\",\"emptyWall\":\"Board_emptyWall__2QPIv\",\"hover\":\"Board_hover__1WgqN\",\"horz\":\"Board_horz__15q0T\",\"w1\":\"Board_w1__3IXna\",\"w2\":\"Board_w2__3_0Ki\",\"vert\":\"Board_vert__1gOiq\",\"wall\":\"Board_wall__XyZwn\",\"empty\":\"Board_empty__WlA6a\",\"validmove\":\"Board_validmove__3pm2u\",\"pulse-move\":\"Board_pulse-move__hgdNu\",\"player1\":\"Board_player1__8QlVJ\",\"active\":\"Board_active__3p7qy\",\"pulse1\":\"Board_pulse1__2MrNP\",\"player2\":\"Board_player2__3X4fq\",\"pulse2\":\"Board_pulse2__ea3-k\",\"player3\":\"Board_player3__4-dk-\",\"pulse3\":\"Board_pulse3__Q3eq_\",\"player4\":\"Board_player4__L86FT\",\"pulse4\":\"Board_pulse4__3DHkG\"};","class Player {\n    constructor(id, x, y, walls, objectives) {\n        this.x = x;\n        this.y = y;\n        this.id = id;\n        this.walls = walls;\n        this.objectives = objectives;\n    }\n\n    move(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    getPos() {\n        return { x: this.x, y: this.y };\n    }\n\n    hasWon() {\n        const _x = this.objectives.x !== null ? this.objectives.x : this.x;\n        const _y = this.objectives.y !== null ? this.objectives.y : this.y;\n\n        if (_x === this.x && _y === this.y) {\n            return true;\n        }\n\n        return false;\n    }\n\n    useWall() {\n        if (this.walls > 0) {\n            this.walls--;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default Player;\n","import React, { Component } from 'react';\n//import PropTypes from 'prop-types';\nimport Player from './Player';\nimport styles from './Board.module.scss';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n\n        const { x = 9, y = 9 } = props;\n        const { players = 4 } = props;\n        const { walls = 5 } = props;\n\n        const emptyBoard = (x, y) => {\n            const _x = x * 2 - 1;\n            const _y = y * 2 - 1;\n\n            const b = new Array(_x);\n            for (let i = 0; i < b.length; i++) {\n                b[i] = new Array(_y);\n                for (let j = 0; j < b[i].length; j++) {\n                    const jmod = j % 2;\n                    const imod = i % 2;\n\n                    b[i][j] = imod ? (jmod ? 'e' : 'w') : jmod ? 'w' : 0;\n                }\n            }\n\n            return b;\n        };\n\n        const board = emptyBoard(x, y);\n\n        const starts = {\n            1: { x: Math.floor(board.length / 2), y: 0 },\n            2: { x: board.length - 1, y: Math.floor(board[0].length / 2) },\n            3: { x: Math.floor(board.length / 2), y: board[0].length - 1 },\n            4: { x: 0, y: Math.floor(board[0].length / 2) },\n        };\n\n        const wins = {\n            1: { x: null, y: board[0].length - 1 },\n            2: { x: 0, y: null },\n            3: { x: null, y: 0 },\n            4: { x: board.length - 1, y: null },\n        };\n\n        const playerObjects = [];\n        for (let i = 1; i <= players; i++) {\n            playerObjects.push(new Player(i, starts[i].x, starts[i].y, walls, wins[i]));\n        }\n\n        this.state = {\n            board: board,\n            curPlayer: 1,\n            players: playerObjects,\n            winner: null,\n            walls: [],\n            wallHover: null,\n        };\n    }\n\n    componentDidMount() {\n        //this.updateBoard();\n    }\n\n    getPlayer(player) {\n        const { players } = this.state;\n\n        return players[player - 1];\n    }\n\n    getCurrentPlayer() {\n        const { curPlayer } = this.state;\n\n        return this.getPlayer(curPlayer);\n    }\n\n    getMovesFlatArray(player) {\n        const _player = this.getPlayer(player);\n        const { x, y } = _player;\n\n        const { board } = this.state;\n        const moves = [];\n\n        const canMove = (x, y) => {\n            if (x < 0 || y < 0) {\n                return false;\n            }\n\n            if (x > board.length - 1 || y > board[x].length - 1) {\n                return false;\n            }\n\n            return board[x][y] === 'w';\n        };\n\n        if (canMove(x + 1, y)) {\n            moves.push(`${x + 2}:${y}`);\n        }\n\n        if (canMove(x - 1, y)) {\n            moves.push(`${x - 2}:${y}`);\n        }\n\n        if (canMove(x, y + 1)) {\n            moves.push(`${x}:${y + 2}`);\n        }\n\n        if (canMove(x, y - 1)) {\n            moves.push(`${x}:${y - 2}`);\n        }\n\n        return moves;\n    }\n\n    tryTurn(x, y) {\n        const { curPlayer, players, winner } = this.state;\n\n        if (winner !== null) {\n            return;\n        }\n\n        const state = { players: players };\n\n        if (!this.tryMove(x, y) && !this.tryWall(x, y)) {\n            return;\n        }\n\n        const otherPositions = players.map(player => (player.id !== curPlayer ? `${player.x}|${player.y}` : ''));\n\n        if (!otherPositions.includes(`${players[curPlayer - 1].x}|${players[curPlayer - 1].y}`)) {\n            if (curPlayer === players.length) {\n                state.curPlayer = 1;\n            } else {\n                state.curPlayer = curPlayer + 1;\n            }\n        }\n\n        if (players[curPlayer - 1].hasWon()) {\n            state.winner = players[curPlayer - 1];\n        }\n\n        this.setState(state);\n    }\n\n    tryMove(x, y) {\n        const { curPlayer, players } = this.state;\n\n        const validMoves = this.getMovesFlatArray(curPlayer);\n\n        if (!validMoves.includes(`${x}:${y}`)) {\n            return false;\n        }\n\n        players[curPlayer - 1].move(x, y);\n\n        return true;\n    }\n\n    tryWall(x, y) {\n        const { curPlayer, players, board } = this.state;\n\n        if (board[x][y] === 'w' && players[curPlayer - 1].useWall()) {\n            const selectedWalls = this.getSelectedWalls();\n            selectedWalls.map(w => (board[w.y][w.x] = 'W'));\n            this.setState({ board: board });\n\n            return selectedWalls.length === 3;\n        }\n\n        return false;\n    }\n\n    getSelectedWalls() {\n        const { wallHover, board } = this.state;\n\n        const selected = [];\n\n        if (wallHover !== null) {\n            const { x, y, n } = wallHover;\n\n            const add = (x, y) => {\n                try {\n                    if (board[y][x] !== 'W') {\n                        selected.push({ x: x, y: y });\n                    }\n                } catch (e) {}\n            };\n\n            add(x, y);\n\n            if (x % 2) {\n                if (n === 1) {\n                    add(x, y - 1);\n                    add(x, y - 2);\n                }\n\n                if (n === 2) {\n                    add(x, y + 1);\n                    add(x, y + 2);\n                }\n            } else {\n                if (n === 1) {\n                    add(x - 1, y);\n                    add(x - 2, y);\n                }\n\n                if (n === 2) {\n                    add(x + 1, y);\n                    add(x + 2, y);\n                }\n            }\n        }\n\n        return selected.length === 3 ? selected : [];\n    }\n\n    render() {\n        const { curPlayer, winner, board } = this.state;\n        const playerMap = this.state.players.map((player, index) => `${player.x}:${player.y}`);\n        const moves = this.getMovesFlatArray(curPlayer);\n\n        const selectedWalls = this.getSelectedWalls().map(w => `${w.x}|${w.y}`);\n\n        const getClass = (v, x, y) => {\n            const classes = [styles.square];\n\n            if (x % 2) {\n                classes.push(styles.narrow);\n            }\n\n            if (y % 2) {\n                classes.push(styles.short);\n            }\n\n            if (moves.includes(`${y}:${x}`)) {\n                classes.push(styles.validmove);\n            }\n\n            if (playerMap.indexOf(`${y}:${x}`) !== -1) {\n                const playerNumber = playerMap.indexOf(`${y}:${x}`) + 1;\n                classes.push(styles[`player${playerNumber}`]);\n\n                if (curPlayer === playerNumber) {\n                    classes.push(styles.active);\n                }\n            }\n\n            switch (v) {\n                case 'e':\n                    classes.push(styles.nothing);\n                    break;\n                case 'w':\n                    classes.push(styles.emptyWall);\n                    if (x % 2) {\n                        classes.push(styles.horz);\n                    } else {\n                        classes.push(styles.vert);\n                    }\n\n                    if (selectedWalls.length) {\n                        if (selectedWalls.indexOf(`${x}|${y}`) !== -1) {\n                            classes.push(styles.hover);\n                        }\n                    }\n\n                    break;\n                case 'W':\n                    classes.push(styles.wall);\n                    break;\n                default:\n                    classes.push(styles.empty);\n                    break;\n            }\n\n            return classes.join(' ');\n        };\n\n        // const getWallBuilderClass = (e, row, c) => [c, row % 2 ? styles.horz : styles.vert].join(' ');\n\n        const setEnter = (row, col, n) => this.setState({ wallHover: { x: row, y: col, n: n } });\n        const setLeave = (row, col, n) => {\n            const { wallHover } = this.state;\n            if (wallHover !== null && row === wallHover.x && col === wallHover.y) {\n                this.setState({ wallHover: null });\n            }\n        };\n\n        const getEmptyWall = (row, col) => {\n            return (\n                <React.Fragment>\n                    <div className={styles.w1} onPointerEnter={() => setEnter(row, col, 1)} onPointerLeave={() => setLeave(row, col, 1)}>\n                        w1\n                    </div>\n                    <div className={styles.w2} onPointerEnter={() => setEnter(row, col, 2)} onPointerLeave={() => setLeave(row, col, 2)}>\n                        w2\n                    </div>\n                </React.Fragment>\n            );\n        };\n        const getContent = (e, row, col) => (e === 'w' ? getEmptyWall(row, col) : e);\n        const getElement = (e, row, col) => (\n            <div key={row} className={getClass(e, row, col)} onClick={e => this.tryTurn(col, row)}>\n                {getContent(e, row, col)}\n            </div>\n        );\n        const getCol = (col, colIndex) => (\n            <div key={colIndex} className={styles.col}>\n                {col.map((e, rowIndex) => getElement(e, rowIndex, colIndex))}\n            </div>\n        );\n\n        const won = winner ? <div>{`Player ${winner.id} is the Winner`}</div> : null;\n\n        return (\n            <div className={ styles.boardInner}>\n                <div className={styles.board}>{board.map((col, index) => getCol(col, index))}</div>\n                {won}\n            </div>\n        );\n    }\n}\n\nexport default Board;\n","import React from 'react';\nimport './App.css';\n\nimport Board from './Board.js';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <p>Game</p>\n            <Board />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}